{"version":3,"sources":["components/WordChainGame/WordChainGame.js","components/NumberBaseballGame/NumberBaseballGame.js","components/Main.js","components/ReactionVelocity/ReactionVelocity.js","components/RPS/RPS.js","components/TimeCal/TimeCal.jsx","App.js","reportWebVitals.js","index.js"],"names":["WordChainGame","useState","Text","setText","Words","setWords","Time","setTime","LastWord","setLastWord","Switch","setSwitch","MSG","setMSG","useEffect","tId","setInterval","console","log","clearInterval","alert","init","parseInt","className","ProgressBar","style","width","variant","now","onSubmit","e","preventDefault","length","includes","arr","concat","placeholder","onChange","target","value","height","color","fontWeight","marginBottom","map","data","idx","withRouter","props","Ball","setBall","HomeRun","setHomeRun","NewNumber","setNewNumber","Result","setResult","Numbers","setNumbers","Game","setGame","strike","ball","startGameHandler","randomNumber","onClickButton","Number","i","j","tmp","flag","num","Math","floor","random","String","backgroundColor","fontSize","onClick","maxHeight","overflow","margin","split","line","display","flexDirection","alignItems","history","push","ReactionVelocity","Now","setNow","startTime","endTime","timer","Date","setTimeout","startGame","nowClick","readyClick","RPS","StartGame","setStartGame","Win","setWin","Draw","setDraw","Lose","setLose","Flag","setFlag","comImage","useRef","gameReset","current","src","resultGame","mySelect","com","ref","TimeCal","Shour","Smin","Ehour","Emin","name","isNaN","res","App","exact","path","component","NumberBaseballGame","Main","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd999fca.chunk.js","sourcesContent":["import React from 'react'\nimport {useState, useEffect} from 'react';\nimport { ProgressBar } from 'react-bootstrap';\n\nfunction WordChainGame() {\n\n  const [Text, setText] = useState('')\n  const [Words, setWords] = useState([])\n  const [Time, setTime] = useState(10)\n  const [LastWord, setLastWord] = useState('')\n  const [Switch,setSwitch] = useState(false)\n  const [MSG, setMSG] = useState('단어를 입력해서 시작!')\n\n  useEffect(() => {\n    if(Switch){\n      const tId = setInterval(() => {\n        if(Time === 0){\n          console.log('Game Over!')\n          clearInterval(tId)\n          alert(\"게임이 종료 되었습니다.\")\n          init();\n          return\n        }\n        setTime(parseInt(Time)-1);\n      },1000)\n\n      return () => {\n        clearInterval(tId)\n      }\n  }\n}, [Time, Switch])\n\nconst init = () =>{\n  setText('')\n  setLastWord('')\n  setMSG('단어를 입력해서 시작!')\n  setWords([])\n  setSwitch(false)\n  setTime(10)\n}\n\nconst onSubmit = (e) => {\n  e.preventDefault();\n\n  if(Switch === false){\n    setSwitch(true)\n  }\n\n  //입력한 글씨가 3글자가 아님\n  if(Text.length !== 3){\n    setMSG(\"3글자를 입력해 주세요.\")\n    setText('')\n    return\n  }\n  //이전 단어 끝 글자와 일치하지 않음\n  if(LastWord.length>0 && LastWord[LastWord.length-1] !== Text[0]){\n    setMSG(\"틀렸습니다.\")\n    setText('')\n    return\n  }\n  \n  if(Words.includes(Text)){\n    setMSG(\"이미 사용된 단어입니다.\")\n    setText('')\n    return\n  }\n\n  setLastWord(Text)\n  const arr = Words.concat([Text])\n  setWords(arr)\n  setText('')\n  setMSG('')\n  setTime(10)\n}\n\n    return (\n       <div className=\"game\">\n        <h1>쿵쿵따 게임</h1>\n        <span className=\"timer\">{Time>0 ? Time : \"Time Out!\"}</span>\n        <ProgressBar style={{width:'73%'}}variant=\"danger\" now={Time * 10} />\n        <form onSubmit={onSubmit}>\n          <input placeholder={\"단어를 입력하세요.\"} onChange={(e)=>{setText(e.target.value)}} value={Text}></input>\n          <button>클릭</button>\n        </form>\n          <span style={{height:'20px',color:\"red\",fontWeight:'500',marginBottom:'5px'}}>{MSG}</span>\n          <div style={{width:\"300px\"}}>\n            {Words.map((data,idx)=>(\n              <span key={idx}>{`${data} > `}</span>\n            ))}\n          </div>\n        </div>\n    )\n}\n\nexport default WordChainGame\n","import React,{useState, useEffect} from 'react'\nimport {withRouter} from  'react-router-dom'\n\nfunction NumberBaseballGame(props) {\n\n    const [Ball, setBall] = useState(['','','',''])\n    const [HomeRun, setHomeRun] = useState('')\n    const [NewNumber, setNewNumber] = useState('')\n    const [Result, setResult] = useState('')\n    const [Numbers, setNumbers] = useState('')\n    const [Game, setGame] = useState(false)\n\n    let strike = 0;\n    let ball = 0;\n\n    useEffect(() => {\n        console.log(Numbers)\n    }, [Numbers])\n\n    const startGameHandler = () => {\n        setNumbers('')\n        setBall(['','','',''])\n        setNewNumber('')\n        setHomeRun('')\n        setResult('')\n        randomNumber()\n        randomNumber()\n        setGame(true)\n    }\n\n    const onClickButton = (e) => {\n\n        e.preventDefault()\n\n        if(!Number(NewNumber) || NewNumber.length !== 4){\n            alert(\"4자리 숫자를 입력하세요.\");\n            setNewNumber('')\n            return;\n        }else{ \n            console.log(Numbers);\n            for(let i=0;i<4;i++){\n                if (NewNumber[i] === Numbers[i]){\n                    strike += 1;\n\n                    Ball[i] = NewNumber[i] \n                    setBall(Ball)\n                }else{\n                    for(let j=0;j<4;j++){\n                        if(NewNumber[i] === Numbers[j]){\n                            ball += 1;\n                        }\n                    }\n                }\n            }\n            setResult(Result + NewNumber + ' ' + strike + 's '+ ball + 'b' +'\\n')\n            if(strike === 4){\n                setHomeRun(\"HomeRun!\")\n                setGame(false)\n            }\n            strike = 0;\n            ball = 0;\n            setNewNumber('')\n        }  \n    }\n\n    const randomNumber = () => {\n\n        let tmp = ''\n\n        while(tmp.length !== 4){ \n            let flag = false;\n            let num = Math.floor(Math.random() * 10);\n            for(let i=0 ; i < tmp.length ; i+=1){\n                if(String(num) === tmp[i]){\n                    flag = true;\n                    break;\n                }\n            }\n            if(flag !== true){tmp = tmp + num}\n        }\n        setNumbers(tmp)\n    }\n\n    return (\n        <>\n        <div className=\"game\" style={{backgroundColor:'rgb(255, 179, 179)'}}>\n            <h1>숫자야구 게임</h1>\n            <span className=\"homerun\" style={{color:'red', fontSize:'1.2rem'}}>{HomeRun}</span>\n            <div className=\"balls\">\n                <div className=\"ball\"><span>{Ball[0]}</span></div>\n                <div className=\"ball\"><span>{Ball[1]}</span></div>\n                <div className=\"ball\"><span>{Ball[2]}</span></div>\n                <div className=\"ball\"><span>{Ball[3]}</span></div>\n            </div>\n            {\n                Game && \n                <form onSubmit={onClickButton} style={{marginBottom:'10px'}}>\n                    <input placeholder={\"숫자를 입력하세요.\"} onChange={(e)=>{setNewNumber(e.target.value)}} value={NewNumber}></input>\n                    <button onClick={onClickButton}>클릭</button>\n                </form>\n            }\n            <div className=\"result\" style={{maxHeight:'100px', overflow:'scroll', margin:'10px'}}>\n            {\n                Result.split('\\n').map(line => (\n                    <>\n                        <span>{line}</span>\n                        <br/>\n                    </>\n                ))\n            }\n            </div>\n            {\n                Game?<div className=\"mainBtn NBGbtn\" onClick={startGameHandler}>재시작</div>\n                :<div className=\"mainBtn NBGbtn\" onClick={startGameHandler}>시작</div>\n            }\n            <span></span>\n        </div>\n        {/* <div className=\"mainBtn\" \n            style={{marginTop:'20px',backgroundColor:'pink'}} \n            onClick={()=>{props.history.push('/')}}>메인으로</div> */}\n        </>\n    )\n}\n\nexport default withRouter(NumberBaseballGame)\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nfunction Main(props) {\n  return (\n    <div\n      style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}\n    >\n      <h1 style={{ marginBottom: \"20px\" }}>리액트 웹 게임</h1>\n      <div className=\"games\">\n        <div\n          className=\"mainBtn\"\n          onClick={() => {\n            props.history.push(\"/WordChainGame\");\n          }}\n        >\n          쿵쿵따\n        </div>\n        <div\n          className=\"mainBtn\"\n          style={{ backgroundColor: \"orange\" }}\n          onClick={() => {\n            props.history.push(\"/NumberBaseballGame\");\n          }}\n        >\n          숫자야구\n        </div>\n        <div\n          className=\"mainBtn\"\n          style={{ backgroundColor: \"green\", color: \"white\" }}\n          onClick={() => {\n            props.history.push(\"/ReactionVelocity\");\n          }}\n        >\n          반응속도\n        </div>\n        <div\n          className=\"mainBtn\"\n          style={{ backgroundColor: \"violet\", color: \"white\" }}\n          onClick={() => {\n            props.history.push(\"/RPS\");\n          }}\n        >\n          가위바위보\n        </div>\n        <div\n          className=\"mainBtn\"\n          style={{ backgroundColor: \"blue\", color: \"white\" }}\n          onClick={() => {\n            props.history.push(\"/TimeCal\");\n          }}\n        >\n          시간계산기\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(Main);\n","import React, {useState, useEffect} from 'react'\nimport './ReactionVelocity.css'\n\nfunction ReactionVelocity() {\n\n        const [Now, setNow] = useState('wait')\n        const [Result, setResult] = useState(null)\n\n        let startTime = 0\n        let endTime = 0\n    \n    useEffect(() => {\n        if(Now === 'ready'){\n            timer()\n        }else if(Now === 'now'){\n            startTime = new Date()\n        }\n    }, [Now])\n\n    const timer = () => {\n        setTimeout(()=>{\n            setNow('now')\n        },Math.floor(Math.random() * 1000) + 2000)\n    }\n\n    const startGame = () => {\n        setNow('ready')\n        startTime = 0\n        endTime = 0\n        setResult(null)\n    }\n\n    const nowClick = () => {\n        endTime = new Date()\n        setResult(`${endTime - startTime}ms`)\n        setNow('wait')\n    }\n\n    const readyClick = () => {\n        alert('너무 빨리 눌렀습니다..')\n    }\n\n    const changeBtn = () => {\n        if(Now === 'wait'){ //게임 시작\n            return <div className=\"btn wait\" onClick={startGame}>시작</div>\n        }else if(Now === 'ready'){ //대기\n            return <div className=\"btn ready\" onClick={readyClick}>기다리세요..</div>\n        }else if(Now === 'now'){ //클릭\n            return <div className=\"btn now\" onClick={nowClick}>클릭하세요!</div>\n        }else{\n            return\n        }\n    }\n\n    return (\n        <div className=\"game\">\n            <h1 style={{marginBottom:'20px'}}>반응속도 측정</h1>\n            <span>{Result}</span>\n            {changeBtn()}\n        </div>\n    )\n}\n\nexport default ReactionVelocity\n","import React,{useState, useRef, useEffect} from 'react'\nimport './RPS.css'\n\nfunction RPS() {\n\n    const [StartGame, setStartGame] = useState(false)\n    const [Win, setWin] = useState(0)\n    const [Draw, setDraw] = useState(0)\n    const [Lose, setLose] = useState(0)\n    const [Flag, setFlag] = useState(true)\n    const [Result, setResult] = useState('')\n    const comImage = useRef()\n\n    useEffect(() => {\n\n        let tId\n        //3번 이기거나 지면 승부가 난다.\n        if(Win === 3){\n            setResult(\"You Win!\")\n            gameReset()\n        }else if(Lose === 3){\n            setResult(\"You Lose...\")\n            gameReset()\n        }else{\n            tId = setTimeout(()=>{\n                comImage.current.src = \"./image/moving.gif\"\n                setFlag(true)\n            }, 2000)\n        }\n\n        return () => {clearInterval(tId)}\n    }, [Win, Draw, Lose])\n\n    const startGameHandler = () => {\n        setStartGame(!StartGame)\n        setResult('')\n    }\n    \n    const gameReset = () => {\n        setWin(0)\n        setLose(0)\n        setDraw(0)\n        setFlag(true)\n        comImage.current.src = \"./image/moving.gif\"\n        setStartGame(false)\n    }\n\n    const resultGame = (mySelect) => {\n\n        if(Flag === false) return\n        \n        setFlag(false)\n\n        const com = Math.floor(Math.random() * 3)\n\n        if(com === 0){\n            comImage.current.src = \"./image/rock.png\"\n        }else if(com === 1){\n            comImage.current.src = \"./image/paper.png\"\n        }else{\n            comImage.current.src = \"./image/scissor.png\"\n        }\n        \n        switch(mySelect){\n            case 0://rock\n                if(com === 0){\n                    setDraw(Draw + 1)\n                }else if(com === 1){\n                    setLose(Lose + 1)\n                }else{\n                    setWin(Win + 1)\n                }\n                break\n            case 1://paper\n                if(com === 0){\n                    setWin(Win + 1)\n                }else if(com === 1){\n                    setDraw(Draw + 1)\n                }else{\n                    setLose(Lose + 1)\n                }\n                break\n            case 2://scissor\n                if(com === 0){\n                    setLose(Lose + 1)\n                }else if(com === 1){\n                    setWin(Win + 1)\n                }else{\n                    setDraw(Draw + 1)\n                }\n                break\n        }\n    }\n\n    return (\n        <div className=\"game\">\n            <h1>가위바위보</h1>\n            <div className=\"computer\"><img src=\"./image/moving.gif\" ref={comImage}/></div>\n            <span style={{marginBottom:'10px', fontSize:'1.3rem',color:'blue'}}>{Result}</span>\n            {\n                StartGame?\n                <>\n                    <span style={{marginBottom:'10px', fontSize:'1.3rem'}}>{Win}승 {Lose}패</span>\n                    <div className=\"rpsBtn\" >\n                        <div onClick={()=>{resultGame(0)}}><img src=\"./image/rock.png\"/></div>\n                        <div onClick={()=>{resultGame(1)}}><img src=\"./image/paper.png\"/></div>\n                        <div onClick={()=>{resultGame(2)}}><img src=\"./image/scissor.png\"/></div>\n                    </div>\n                </>\n                :<div className=\"startBtn\" onClick={startGameHandler}>시작하기</div>\n            }     \n        </div>\n    )\n}\n\nexport default RPS\n","import React, { useState } from \"react\";\nimport \"./style.css\";\n\nfunction TimeCal() {\n  const [Time, setTime] = useState({\n    Shour: 0,\n    Smin: 0,\n    Ehour: 0,\n    Emin: 0,\n  });\n  const { Shour, Smin, Ehour, Emin } = Time;\n  const [Result, setResult] = useState(0);\n\n  const getResult = () => {\n    const res =\n      60 -\n      parseInt(Smin) +\n      parseInt(Emin) +\n      (parseInt(Ehour) - parseInt(Shour) - 1) * 60;\n    setResult(res);\n  };\n\n  const onChange = (e) => {\n    let { value, name } = e.target;\n\n    if (!isNaN(value)) {\n      setTime({\n        ...Time,\n        [name]: value,\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h1>시간계산기</h1>\n      <div className=\"layout\">\n        <div className=\"start time\">\n          시작시간 :\n          <input value={Shour} name=\"Shour\" onChange={onChange}></input>시\n          <input name=\"Smin\" value={Smin} onChange={onChange}></input>분\n        </div>\n        <div className=\"end time\">\n          끝시간 :<input value={Ehour} name=\"Ehour\" onChange={onChange}></input>\n          시<input name=\"Emin\" value={Emin} onChange={onChange}></input>분\n        </div>\n        <button onClick={getResult}>계산하기</button>\n        <span className=\"result\" style={{ color: \"red\" }}>\n          {Result}분\n        </span>\n        <span className=\"result\" style={{ color: \"red\" }}>\n          {parseInt(Result / 60)}시간 {Result % 60}분\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default TimeCal;\n","import \"./App.css\";\nimport WordChainGame from \"./components/WordChainGame/WordChainGame\";\nimport NumberBaseballGame from \"./components/NumberBaseballGame/NumberBaseballGame\";\nimport Main from \"./components/Main\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport ReactionVelocity from \"./components/ReactionVelocity/ReactionVelocity\";\nimport RPS from \"./components/RPS/RPS\";\nimport TimeCal from \"./components/TimeCal/TimeCal\";\n\nfunction App(props) {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/WordChainGame\" component={WordChainGame} />\n          <Route\n            exact\n            path=\"/NumberBaseballGame\"\n            component={NumberBaseballGame}\n          />\n          <Route exact path=\"/ReactionVelocity\" component={ReactionVelocity} />\n          <Route exact path=\"/RPS\" component={RPS} />\n          <Route exact path=\"/TimeCal\" component={TimeCal} />\n          <Route exact path=\"*\" component={Main} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}